{
  "name": "Articles",
  "tagline": "常用CSS书写技巧和CSS HACK技巧",
  "body": " 不 同的浏览器，比如Internet Explorer 6，Internet Explorer 7，Mozilla Firefox等，对CSS的解析认识不一样，因此会导致生成的页面效果不一样，得不到我们所需要的页面效果。这个时候我们就需要针对不同的浏览器去写不 同的CSS，让它能够同时兼容不同的浏览器，能在不同的浏览器中也能得到我们想要的页面效果。这个针对不同的浏览器写不同的CSS code的过程，就叫CSS hack，也叫写CSS hack。\r\n\r\n由于不同的浏览器对CSS的支持及解析结果不一样，还由于CSS中的优先级的关系。我们就可以根据这个来针对不同的浏览器来写不同的CSS。\r\n\r\n比如 IE6能识别下划线“_”和星号“ * ”，IE7能识别星号“ * ”，但不能识别下划线“_”，而firefox两个都不能认识。等等\r\n\r\n书写顺序，一般是将识别能力强的浏览器的CSS写在后面。下面列举常用的CSS hack方法\r\n\r\n1：!important\r\n\r\n!important作用是提高指定样式规则的应用优先权。\r\n\r\nIE7以及所有标准浏览器能识别!important\r\n\r\n区别IE6与IE7与其他浏览器\r\n\r\n \r\n以下为引用的内容：\r\n.browserTest \r\n{ \r\n    border:20px solid #60A179 !important;\r\n    border:20px solid #00F;\r\n}\r\n\r\n \r\n\r\n在Mozilla中或者IE7浏览时候，能够理解!important的优先级，因此显示#60A179的颜色：\r\n\r\n在IE6中浏览时候，不能够理解!important的优先级，因此显示#00F的颜色：\r\n\r\n2：*\r\n\r\nIE都能识别*；标准浏览器（如火狐）不能识别*\r\n\r\n区别IE6与火狐\r\n\r\n \r\n以下为引用的内容：\r\n.browserTest \r\n{ \r\n    border:20px solid #60A179;\r\n    *border:20px solid #00F;\r\n} \r\n\r\n \r\n\r\n区别IE7与火狐\r\n\r\n \r\n以下为引用的内容：\r\n.browserTest \r\n{ \r\n   border:20px solid #60A179;\r\n   *border:20px solid #00F;\r\n} \r\n区别IE7，IE6与火狐\r\n.browserTest \r\n{ \r\n   border:20px solid #60A179;\r\n   *border:20px solid #00F !important;\r\n   *border:20px solid ###;\r\n}\r\n\r\n \r\n\r\n3：_\r\n\r\nIE6支持下划线，IE7和firefox均不支持下划线\r\n\r\n区别IE7，IE6与火狐\r\n\r\n \r\n以下为引用的内容：\r\n.browserTest \r\n{ \r\n   border:20px solid #60A179;\r\n   *border:20px solid #00F;\r\n   _border:20px solid ###;\r\n}\r\n/*不管是什么方法，书写的顺序都是firefox的写在前面，IE7的写在中间，IE6的写在最后面*/\r\n\r\n \r\n\r\n4：*+html 与 *html\r\n\r\n*+html 与 *html 是IE特有的标签， firefox 暂不支持。而*+html 又为 IE7特有标签\r\n\r\n \r\n以下为引用的内容：\r\n.browserTest { width: 120px; }      /* FireFox fixed */ \r\n*html .browserTest { width: 80px;}  /* ie6 fixed */ \r\n*+html .browserTest { width: 60px;} /* ie7 fixed */\r\n\r\n \r\n\r\n注意：\r\n\r\n*+html 对IE7的HACK 必须保证HTML顶部有如下声明：\r\n\r\n \r\n以下为引用的内容：\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"> \r\n/*****************************************************************************/\r\n\r\n \r\n\r\n/*****************************************************************************/\r\n\r\n \r\n\r\n以下是一些常用的CSS兼容技巧\r\n\r\n1）火狐下给div设置padding后会导致width和height 增加， 但IE不会。（可用！important解决）\r\n\r\n2）垂直居中，将 line-height设置为当前div相同的高度， 再通过vertical-align： middle；（ 注意内容不要换行）\r\n\r\n3）水平居中，margin:0 auto;（当然不是万能）\r\n\r\n4）若需给a标签内内容加上样式， 需要设置 display： block;（常见于导航标签）\r\n\r\n5）浮动IE产生的双倍距离\r\n\r\n在IE下，当一个div设置了float后，然后给他设置margin，就会出现加倍的margin，解决的办法是给div设置display:inline。\r\n\r\n \r\n以下为引用的内容：\r\n<div id=”float”></div> \r\n相应的css为\r\n#float\r\n{\r\n   float:left;\r\n   margin:5px;/*IE下理解为10px*/\r\n   display:inline;/*IE下再理解为5px*/\r\n}\r\n\r\n \r\n\r\nBlock元素的特点是：总是在新行上开始，高度，宽度，行高，边距都可以控制（块元素）;Inline元素的特点是：和其他元素在同一行上，...不可控制（内嵌元素）;\r\n\r\n6）IE和FF对盒模型的解释区别\r\n\r\n#browserTest{ width: 650px !important;width: 648px;padding-left:2px;background:#fff; }\r\n\r\nbrowserTest显示的宽度是650px；\r\n\r\nIE Box的总宽度是：width+padding+border+margin宽度总和；\r\n\r\nFF Box的总宽度就是：width的宽度，padding+border+margin的宽度在含在width内。\r\n\r\n如果有BOX{WIDTH:\"300\"; PADDING:\"5PX\";}\r\n\r\n则BOX在IE的宽度应该为：310\r\n\r\n而在FF的宽度则是300\r\n\r\n所以在BOX有填充的情况下应该这样使用\r\n\r\nBOX{WIDTH:\"300\" !IMPORTANT; WIDTH:\"290\";}\r\n\r\n7）ul标签在FF下面默认有list-style和padding， 最好事先声明， 以避免不必要的麻烦;（常见于导航标签和内容列表）\r\n\r\n8）作为外部wrapper的div不要定死高度， 最好还加上 overflow： hidden;以达到高度自适应;\r\n\r\n9）页面的最小宽度\r\n\r\nmin-width是个非常方便的CSS命令，它可以指定元素最小也不能小于某个宽度，这样就能保证排版一直正确。但IE不认得这个，\r\n\r\n而它实际上把width当做最小宽度来使。为了让这一命令在IE上也能用，可以把一个《div》 放到 《body》 标签下，然后为div指定一个类：\r\n\r\n然后CSS这样设计：\r\n\r\n#container{ min-width: 600px; width:expression(document.body.clientWidth < 600? \"600px\": \"auto\" );}\r\n\r\n第一个min-width是正常的；但第2行的width使用了Javascript，这只有IE才认得，这也会让你的HTML文档不太正规。它实际上通过Javascript的判断来实现最小宽度。\r\n\r\n10：万能float闭合\r\n\r\n将以下代码加入Global CSS 中，给需要闭合的div加上\r\n\r\n \r\n以下为引用的内容：\r\n<style> \r\n/* Clear Fix */ \r\n.clearfix:after \r\n{ \r\n   content:\".\"; \r\n   display:block; \r\n   height:0; \r\n   clear:both; \r\n   visibility:hidden; \r\n} \r\n*html .clearfix{\r\n   height:1%;\r\n}\r\n*+html .clearfix{\r\n   height:1%;\r\n}\r\n.clearfix \r\n{ \r\n   display:inline-block; \r\n} \r\n/* Hide from IE Mac */ \r\n.clearfix {display:block；} \r\n/* End hide from IE Mac */ \r\n/* end of clearfix */ \r\n</style> \r\n/**********************************************/\r\n<div id=\"wrap\"> \r\n   <div class=\"column_left\"> \r\n     <h1>Float left</h1> \r\n   </div> \r\n   <div class=\"column_right\"> \r\n     <h1>Float right</h1> \r\n   </div> \r\n</div> \r\n#wrap{ border:6px #ccc solid; overflow:auto; _height:1%;} \r\n.column_left{ float:left; width:20%; padding:10px;} \r\n.column_right{ float:right; width:75%; padding:10px; border-left:6px #eee solid;} \r\n世界如此美好，我却如此暴躁~不好不好\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}